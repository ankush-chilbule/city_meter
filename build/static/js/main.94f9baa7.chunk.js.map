{"version":3,"sources":["logo.svg","layouts/SideBar.js","config/context.js","components/Meter.js","components/NMeter.js","layouts/CityMeter.js","layouts/WardMeter.js","components/Table.js","components/Graph.js","containers/Visualise.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","to","className","Context","React","createContext","Provider","state","name","current","aqi","complaint","swm","hospital","nObj","isGraph","tree","graph","clickHandler","e","console","log","currentTarget","lastChild","value","setState","toggleGraph","toggleTable","fetch","then","res","json","this","props","children","Component","data","label","mkey","useContext","onClick","data-key","width","height","minValue","maxValue","customSegmentStops","segmentColors","needleColor","needleHeightRatio","type","Meter","NMeter","myObj","border","Object","keys","map","key","obj","myData","myList","push","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","maintainAspectRatio","currGraph","Graph","Table","App","Consumer","SideBar","exact","path","component","CityMeter","WardMeter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94f9baa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default ()=>{\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to='/' className=\"text_reversed\">\r\n                        City Meter\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/ward' className=\"text_reversed\">\r\n                        Ward Meter\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React,{Component} from 'react'\r\n\r\nimport csvToJson from 'convert-csv-to-json'\r\nimport csv from 'csvtojson'\r\nconst Context = React.createContext()\r\n\r\nexport class Provider extends Component{\r\n   \r\n    state={\r\n        name:\"Rahul\",\r\n        current:'hospital',\r\n        aqi:[{\"Wards\":\"Aundh-Baner\",\"AQI\":0.042248,\"status\":\"unhealthy for sensitive groups\"},{\"Wards\":\"Kothrud-Bawdhan\",\"AQI\":0.042820278,\"status\":\"unhealthy for sensitive groups\"},{\"Wards\":\"Tilak Road\",\"AQI\":0.04064,\"status\":\"unhealthy for sensitive groups\"},{\"Wards\":\"Warje-Karvenagar\",\"AQI\":0.044217323,\"status\":\"unhealthy for sensitive groups\"}],\r\n        complaint:[{\"Wards\":\"Aundh-Baner\",\"2017\":3450,\"2018\":4857,\"Percent increase\":17.350884,\"Index\":1.7350884},{\"Wards\":\"Ghole Road\",\"2017\":2139,\"2018\":3401,\"Percent increase\":22.533062,\"Index\":2.2533062},{\"Wards\":\"Kothrud-Bawdhan\",\"2017\":2057,\"2018\":2322,\"Percent increase\":7.315185,\"Index\":0.7315185},{\"Wards\":\"Warje-Karvenagar\",\"2017\":1372,\"2018\":3046,\"Percent increase\":34.400483,\"Index\":3.4400483}],\r\n        swm:[{\"Wards\":\"Aundh-Baner\",\"door_to_door_collection_percentage\":2.992,\"gate_to_gate_collection_percentage\":2.992,\"total_waste_collected_in_tons\":86.4,\"total_waste_generated_in_tons\":100.8,\"Positive\\/Negative Index\":-14.28571429,\"Normalized\":7.320020299},{\"Wards\":\"Kothrud-Bawdhan\",\"door_to_door_collection_percentage\":435.0,\"gate_to_gate_collection_percentage\":435.0,\"total_waste_collected_in_tons\":74.5,\"total_waste_generated_in_tons\":100.0,\"Positive\\/Negative Index\":-25.5,\"Normalized\":4.821776721},{\"Wards\":\"Tilak Road\",\"door_to_door_collection_percentage\":143.0,\"gate_to_gate_collection_percentage\":178.0,\"total_waste_collected_in_tons\":71.61,\"total_waste_generated_in_tons\":84.253,\"Positive\\/Negative Index\":-15.00599385,\"Normalized\":7.159561234},{\"Wards\":\"Warje-Karvenagar\",\"door_to_door_collection_percentage\":16607.37,\"gate_to_gate_collection_percentage\":2286.9205,\"total_waste_collected_in_tons\":67.6,\"total_waste_generated_in_tons\":94.67,\"Positive\\/Negative Index\":-28.59406359,\"Normalized\":4.132501926}],\r\n        hospital:[{\"Wards\":\"Aundh-Baner\",\"Number of Beds in facility type\":1146,\"Total Population\":181124,\"No_Required_bed\":60372,\"Percent\":0.189823097,\"Index\":-98.10176903},{\"Wards\":\"Tilak Road\",\"Number of Beds in facility type\":2709,\"Total Population\":433635,\"No_Required_bed\":144537,\"Percent\":0.187426057,\"Index\":-98.12573943},{\"Wards\":\"Kothrud-Bawdhan\",\"Number of Beds in facility type\":1518,\"Total Population\":209331,\"No_Required_bed\":69776,\"Percent\":0.217553313,\"Index\":-97.82446687},{\"Wards\":\"Warje-Karvenagar\",\"Number of Beds in facility type\":1312,\"Total Population\":233399,\"No_Required_bed\":77795,\"Percent\":0.168648371,\"Index\":-98.31351629}],\r\n        nObj:null,\r\n        isGraph:false,\r\n        tree:[{\"Wards\":\"Aundh-Baner\",\"Tree Count\":280564,\"Total Population\":181124,\"Required Trees\":90562.0,\"Index\":209.8032287,\"Normalized Values\":4.312176228},{\"Wards\":\"Kothrud-Bawdhan\",\"Tree Count\":185265,\"Total Population\":209331,\"Required Trees\":104665.5,\"Index\":77.00675008,\"Normalized Values\":2.4327616},{\"Wards\":\"Tilak Road\",\"Tree Count\":862184,\"Total Population\":242290,\"Required Trees\":121145.0,\"Index\":611.6959016,\"Normalized Values\":10.0},{\"Wards\":\"Warje-Karvenagar\",\"Tree Count\":101481,\"Total Population\":233399,\"Required Trees\":116699.5,\"Index\":-13.04075853,\"Normalized Values\":1.158355783}],\r\n        graph:{\r\n            tree:[{'Tree Count':[280564,185265,862184,101481]},{'Required Trees':[90562,104665,121145,116699]}],\r\n        swm:[{'total_waste_collected_in_tons':[86.4,74.5,71.61,67.6]},{'total_waste_generated_in_tons':[100.8,100,84.2,94.6]}],\r\n        complaint:[{'2017':[3450,2139,2057,1372]},{'2018':[4857,3401,2322,3046]}],\r\n        hospital:[{'Number of Beds in facility type':[1146,2709,1518,1312]},{'No_Required_bed':[60372,144537,69776,77795]}],\r\n        aqi:[{},{}]\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(csvToJson.getJsonFromCsv('./data/City-positive-data.csv'))\r\n     \r\n        fetch('./data/Aqi-data.json')\r\n        .then((res)=>{\r\n            console.log(res.json())\r\n        })\r\n    }\r\n    clickHandler=(e)=>{\r\n       console.log(e.currentTarget.lastChild.value)\r\n       this.setState({current:e.currentTarget.lastChild.value})\r\n    }\r\n\r\n    toggleGraph=()=>{\r\n        this.setState({isGraph:true})\r\n    }\r\n    toggleTable=()=>{\r\n        this.setState({isGraph:false})\r\n    }\r\n    render(){\r\n        return(\r\n            <Context.Provider value={{\r\n                ...this.state,\r\n                clickHandler:this.clickHandler,\r\n                toggleGraph:this.toggleGraph,\r\n                toggleTable:this.toggleTable\r\n            }}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Context;","import React,{useContext} from 'react'\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport Context from '../config/context'\r\nexport default ({data,label,mkey})=>{\r\n\r\n    const {clickHandler} = useContext(Context)\r\n    return(\r\n        <div className=\"meter\" onClick={clickHandler} data-key={mkey}>\r\n            <h3>\r\n                {label}\r\n            </h3>\r\n            <ReactSpeedometer\r\n                    width={200}\r\n                    height={200}\r\n                    minValue={0}\r\n                    maxValue={10}\r\n                    customSegmentStops={[0, 3, 7,  10]}\r\n                    segmentColors={[\"#DF2727\", \"gold\", \"#1d9421\"]}\r\n                    value={data}\r\n                    needleColor={\"#242325\"}\r\n                    needleHeightRatio={0.8}\r\n            />\r\n            <input type=\"hidden\" value={mkey} onClick={clickHandler}/>\r\n        </div>\r\n    )\r\n}","import React,{useContext} from 'react'\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport Context from '../config/context'\r\nexport default ({data,label,mkey})=>{\r\n\r\n    const {clickHandler} = useContext(Context)\r\n    return(\r\n        <div className=\"meter\" onClick={clickHandler} data-key={mkey}>\r\n            <h3>\r\n                {label}\r\n            </h3>\r\n            <ReactSpeedometer\r\n                    width={200}\r\n                    height={200}\r\n                    minValue={0}\r\n                    maxValue={10}\r\n                    customSegmentStops={[0, 3, 7,  10]}\r\n                    segmentColors={[\"#1d9421\", \"gold\", \"#DF2727\"]}\r\n                    value={data}\r\n                    needleColor={\"#242325\"}\r\n                    needleHeightRatio={0.8}\r\n            />\r\n            <input type=\"hidden\" value={mkey} onClick={clickHandler}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport Meter from '../components/Meter'\r\nimport NMeter from '../components/NMeter'\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div className=\"city_meter\">\r\n            <section >\r\n            <Meter\r\n            data={4.14}\r\n            label={\"City Meter\"}\r\n            mkey={\"nObj\"}\r\n            />\r\n            </section>\r\n            <section className=\"sub_meters\">\r\n                <div className=\"positive_meter\">\r\n                <Meter\r\n            data={5.8}\r\n            label={\"Solid Waste Management\"}\r\n            mkey={\"swm\"}\r\n            /><Meter\r\n            data={4.4}\r\n            label={\"Tree Census\"}\r\n            mkey={\"tree\"}\r\n            /><Meter\r\n            data={0.19}\r\n            label={\"Hospital\"}\r\n            mkey={\"hospital\"}\r\n            />\r\n\r\n                </div>\r\n                <div className=\"negative_meter\">\r\n                <NMeter\r\n            data={2.0}\r\n            label={\"Air Quality Index\"}\r\n            mkey={\"aqi\"}\r\n            /><NMeter\r\n            data={2}\r\n            label={\"Complaints\"}\r\n            mkey={\"complaint\"}\r\n            \r\n            />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Meter from '../components/Meter'\r\nexport default ()=>{\r\n    return(\r\n        <div className=\"ward_meter\">\r\n\r\n            <section className=\"jugad\">\r\n            <div className=\"wardSelector\">\r\n            <select>\r\n                <option>\r\n                    Aundh-Baner\r\n                 </option> \r\n                 <option>\r\n                    Ghole Road\r\n                 </option> \r\n                 <option>\r\n                    Kothrud\r\n                 </option> \r\n                   \r\n            </select>\r\n            </div>\r\n            <Meter\r\n            data={4.14}\r\n            label={\"Ward Meter\"}\r\n            />\r\n            </section>\r\n            <section className=\"sub_meters\">\r\n                <div className=\"positive_meter\">\r\n                <Meter\r\n            data={5.8}\r\n            label={\"SWM\"}\r\n            mkey={\"swm\"}\r\n            /><Meter\r\n            data={4.4}\r\n            label={\"Tree Census\"}\r\n            mkey={\"tree\"}\r\n            /><Meter\r\n            data={0.19}\r\n            label={\"Hospital\"}\r\n            mkey={\"hospital\"}\r\n            />\r\n\r\n                </div>\r\n                <div className=\"negative_meter\">\r\n                <Meter\r\n            data={2.0}\r\n            label={\"AQI\"}\r\n            mkey={\"aqi\"}\r\n            /><Meter\r\n            data={2}\r\n            label={\"Complaints\"}\r\n            mkey={\"complaint\"}\r\n            \r\n            />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default({myObj})=>{\r\n\r\n    return(\r\n        <div className=\"tables\">\r\n             {myObj? <div>\r\n            <h3>\r\n                Average Table\r\n            </h3>\r\n            <p>\r\n                \r\n            </p>\r\n        <table border=\"1|0\">\r\n            <tr>\r\n                {\r\n                    Object.keys(myObj[0]).map((key)=>{\r\n                        return(\r\n                            <th>\r\n                                {key}\r\n                            </th>\r\n                        )\r\n                    })\r\n                }\r\n            </tr>\r\n            {\r\n                myObj.map((obj)=>{\r\n                    return(\r\n                        <tr>\r\n                            {\r\n                                Object.keys(obj).map((key)=>{\r\n                                    return(\r\n                                        <td>\r\n                                        {obj[key]}\r\n                                    </td>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                        )\r\n                    \r\n                })\r\n            }\r\n        </table>\r\n            </div>\r\n           :null}\r\n        </div>\r\n\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\nclass graph extends Component{\r\n\r\n\r\n     myData = this.props.myObj.map((e)=>{\r\n         let myList=[]\r\n            myList.push(Object.keys(e).map((key)=>{\r\n                return {\r\n                    'label':key,\r\n                    'data':e[key]\r\n                }\r\n            }))\r\n\r\n            \r\n            return myList;\r\n    })\r\n     data = {\r\n        labels: ['Aundh-Baner','Kothrud-Bawdhan','Warje-Karvenagar','Tilak Road\t'],\r\n        datasets: [\r\n          {\r\n            label: 'Dataset',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: [65, 59, 80, 81]\r\n          }\r\n        ]\r\n      };\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Bar\r\n          data={this.data}\r\n          width={200}\r\n          height={200}\r\n          options={{\r\n            maintainAspectRatio: false\r\n          }}\r\n        />\r\n      \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default graph","import React,{useContext} from 'react'\r\nimport Table from '../components/Table'\r\nimport Graph from '../components/Graph'\r\nimport Context from '../config/context'\r\nimport { objectTypeAnnotation } from '@babel/types';\r\n\r\nexport default ({myObj})=>{\r\n    const {isGraph,toggleGraph,toggleTable,graph,current} = useContext(Context)\r\n    const currGraph = graph[current]\r\n    return(\r\n        <section className=\"visualize\" >\r\n            <div className=\"toggle\">\r\n            <button onClick={toggleGraph} className={isGraph?\"active\":\"\"}>\r\n                    Show Graphs\r\n                  </button> \r\n            <button className={isGraph?\"\":\"active\"} onClick={toggleTable}>\r\n                   \r\n                        Tables  \r\n                    </button>\r\n                    </div>\r\n                    <div className=\"wrapper\">\r\n              {\r\n                  isGraph?<Graph\r\n                  myObj={currGraph}\r\n                  />:<Table myObj={myObj}/>\r\n              }\r\n                    </div>\r\n                  \r\n          \r\n          \r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './css/main.css'\r\nimport { Route, HashRouter as Router, Link, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport SideBar from './layouts/SideBar'\r\nimport CityMeter from './layouts/CityMeter'\r\nimport WardMeter from './layouts/WardMeter'\r\nimport Visualize from './containers/Visualise'\r\nimport Context,{Provider} from './config/context'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      \r\n     <Router>\r\n\r\n     <Context.Consumer>\r\n        {\r\n          value=>{\r\n            return(\r\n             <div className=\"app\">\r\n                <SideBar />\r\n                <main>\r\n              \r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={CityMeter} />\r\n                    <Route exact path=\"/ward\" component={WardMeter} />\r\n                  </Switch>\r\n               \r\n                  <Visualize\r\n                  myObj={value[value.current]}\r\n\r\n                  />\r\n                </main>\r\n\r\n             </div>\r\n            )\r\n          }\r\n        }\r\n      </Context.Consumer>\r\n     </Router>\r\n      \r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}